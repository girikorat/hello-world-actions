name: Java Docker Kubernetes Workflow

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout your repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Compile Java
      - name: Compile Java Code
        run: javac src/main/java/com/example/HelloWorld.java

      # Step 4: Run Java Hello World
      - name: Run Java Hello World
        run: java -cp src/main/java com.example.HelloWorld

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 6: Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/hello-world-actions:latest .

      # Step 7: Push Docker image
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/hello-world-actions:latest

      # Step 8: Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      # Step 9: Configure kubeconfig
      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
        shell: bash

      # Step 10: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl --kubeconfig $HOME/.kube/config set image deployment/hello-world-deployment hello-world-container=${{ secrets.DOCKERHUB_USERNAME }}/hello-world-actions:latest --record
          kubectl --kubeconfig $HOME/.kube/config rollout status deployment/hello-world-deployment
        shell: bash

